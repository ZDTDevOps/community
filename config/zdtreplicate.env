# ZDT DevOps Platform 
# zdtreplicate.env - Environment Configuration File
# ================================================
# This file contains all configuration parameters for the zdtreplicate tool,
# which manages DRBD replication for high availability setups and disaster recovery.
# 
# Each parameter can be adjusted according to your specific environment needs.
# The configuration is divided into logical sections to make it easier to navigate.

# ------------------------------------------------
# Node Configuration
# ------------------------------------------------
# ZDTREP_NODE_TYPE: Type of node in the DRBD cluster
#   Possible values:
#   - primary: Active node that serves data (read/write)
#   - secondary: Standby node in local cluster for quick failover
#   - mirror: Node that replicates data to external datacenter
#   - external: Node in a separate datacenter that receives replication
ZDTREP_NODE_TYPE=primary

# ZDTREP_NODE_ID: Unique identifier for this node in the DRBD configuration
# This should be a simple string without spaces (e.g., nodeA, dc1node, etc.)
ZDTREP_NODE_ID=nodeA

# ZDTREP_CLUSTER_ADDR: IP address or hostname of this node
# Used for DRBD network communication
ZDTREP_CLUSTER_ADDR=192.168.1.1

# ZDTREP_DISK_DEVICE: Block device to be used for DRBD replication
# This device will be used to store the replicated data
# WARNING: All data on this device will be erased during setup
ZDTREP_DISK_DEVICE=/dev/sdb1

# ZDTREP_DATA_DIR: Directory where the DRBD device will be mounted
# This is typically where your application (e.g., etcd) will store its data
ZDTREP_DATA_DIR=/var/lib/etcd

# ------------------------------------------------
# Replication Configuration
# ------------------------------------------------
# ZDTREP_REPLICATION_PROTOCOL: DRBD replication protocol
#   Possible values:
#   - A: Asynchronous replication (fastest, potential data loss)
#   - B: Semi-synchronous (confirms network receipt, not disk write)
#   - C: Synchronous (slowest but safest, no data loss)
# Use C for local nodes, A for cross-datacenter replication
ZDTREP_REPLICATION_PROTOCOL=C

# ZDTREP_REPLICATION_PORT: Base TCP port for DRBD replication
# DRBD will use this port for network communication
# Make sure this port is open in your firewall
ZDTREP_REPLICATION_PORT=7788

# ZDTREP_BANDWIDTH_LIMIT: Network bandwidth limit for replication
# Format: Number followed by K, M, or G (e.g., 10M for 10 megabits/sec)
# Use 0 for unlimited bandwidth
# Especially useful for cross-datacenter replication to avoid network saturation
ZDTREP_BANDWIDTH_LIMIT=0

# ------------------------------------------------
# Remote Node Addresses
# ------------------------------------------------
# ZDTREP_PRIMARY_ADDR: IP address of the primary node
# Required for secondary and mirror nodes, leave empty for primary nodes
ZDTREP_PRIMARY_ADDR=

# ZDTREP_SECONDARY_ADDR: IP address of the secondary node
# Required for mirror nodes, leave empty for primary and secondary nodes
ZDTREP_SECONDARY_ADDR=

# ZDTREP_MIRROR_ADDRS: Comma-separated list of mirror node addresses
# Required for external nodes, leave empty for other node types
# Example: 10.0.0.1,10.0.0.2,10.0.0.3
ZDTREP_MIRROR_ADDRS=

# ------------------------------------------------
# Monitoring Configuration
# ------------------------------------------------
# ZDTREP_MONITOR_INTERVAL: Time between status checks in seconds
# Controls how frequently the monitor command checks replication status
ZDTREP_MONITOR_INTERVAL=60

# ZDTREP_MONITOR_LOG_PATH: Full path to monitoring log file
# The monitor command will write status information to this file
ZDTREP_MONITOR_LOG_PATH=/var/log/zdtreplicate.log

# ------------------------------------------------
# NFS Configuration (Optional)
# ------------------------------------------------
# ZDTREP_NFS_ENABLED: Enable NFS exports of the DRBD device
# Set to true to automatically configure NFS sharing of the replicated data
# This is useful for Kubernetes PVC integration
ZDTREP_NFS_ENABLED=false

# ZDTREP_NFS_EXPORTS_DIR: Directory to export via NFS
# Typically the same as ZDTREP_DATA_DIR or a subdirectory
ZDTREP_NFS_EXPORTS_DIR=/mnt/etcd-data

# ZDTREP_NFS_ALLOWED_CLIENTS: Clients allowed to access the NFS export
# Format follows NFS exports syntax (* for all, IP/subnet for specific clients)
ZDTREP_NFS_ALLOWED_CLIENTS=*

# ZDTREP_NFS_OPTIONS: NFS export options
# Common options:
# - rw: Allow read/write access
# - sync: Synchronous writes (safer)
# - no_subtree_check: Disable subtree checking (better performance)
# - no_root_squash: Allow root access (use with caution)
ZDTREP_NFS_OPTIONS=rw,sync,no_subtree_check

# ------------------------------------------------
# Advanced Options
# ------------------------------------------------
# ZDTREP_METADATA_OPTIONS: Additional options for DRBD metadata creation
# These options are passed directly to the 'drbdadm create-md' command
# Leave empty for default behavior
ZDTREP_METADATA_OPTIONS=

# ZDTREP_RESOURCE_NAME_PREFIX: Prefix for DRBD resource names
# The full resource name will be this prefix followed by the node ID
# Default is 'etcd-data', resulting in names like 'etcd-data-nodeA'
ZDTREP_RESOURCE_NAME_PREFIX=etcd-data